version: 2
jobs:
  build:
    working_directory: ~/betteruntis
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Prepare signing config
          command: |
            echo $KEYSTORE_ENCODED | base64 --decode >> app/BetterUntis.jks
            echo 'export KEYSTORE_PASSWORD=$(echo "$KEYSTORE_PASSWORD_ENCODED" | base64 --decode)' >> $BASH_ENV
            echo 'export KEY_DEBUG_PASSWORD=$(echo "$KEY_DEBUG_PASSWORD_ENCODED" | base64 --decode)' >> $BASH_ENV
            echo 'export KEY_RELEASE_PASSWORD=$(echo "$KEY_RELEASE_PASSWORD_ENCODED" | base64 --decode)' >> $BASH_ENV
      - run:
          name: Initial build
          command: ./gradlew clean assemble
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - run:
          name: Preparing workspace
          command: |
            mkdir -p workspace
            cp -r app/build/outputs workspace/outputs
      - persist_to_workspace:
          root: workspace
          paths:
            - outputs
  deploy:
    machine:
      enabled: true
    working_directory: ~/betteruntis
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy Over SSH
          command: |
            ls -lAR workspace
            #scp -r ~/flapweb-auth-service "$SSH_USER@$SSH_HOST:$SSH_DEPLOY_PATH"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
